.posts {
    margin-top:50px;
    display:flex;
    flex-direction: column;
    gap:150px;
}

.post {
    display:flex;
    gap: 50px;
}

/* 
Below is logic for our posts to be alternating sides so it looks more aesthetically pleasing!
2n+1 refers to odd so every odd id it will alternate sides by flex-direction : row-reverse!
*/
.post:nth-child(2n+1) {
    flex-direction: row-reverse;
}


 /* 
 for .img and the .img::after, the positions need to be set the way it is so that .img::after can work with the proper top and left of the parent class which is .img
So with the styling we create a background board same size as the parent .img and then we change colour, position to make it where we want.
z-index to make it appear behind the actual image (without z-index our light blue background will be infront of the actual image)
 */
.img {
    flex: 2;
    position:relative;
}

.img::after {
    content: "";
    width:100%;
    height: 100%;
    background-color: #b9e7e7;
    position: absolute;
    top:20px;
    left: -20px;
    z-index: -1;
}


/* Width 100% means it will be the width of the parent class which is     flex: 1 */

.img img {
    width:100%;
    max-height: 400px;
    object-fit: cover;
}

.content {
    flex: 3;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.content h1 {
    font-size: 42px;
}

.content p {
    font-size: 18px;
}

.content button {
    width: max-content;
    padding: 10px 20px;
    cursor: pointer;
    background-color: white;
    border: 2px solid #b9e7e7;
    font-size: 13px;
}

.content button:hover {
    border: 2px solid white;
    background-color: #b9e7e7;
    color: black;
}
